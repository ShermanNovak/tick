services:
  token:
    build:
      context: token-service
      dockerfile: ../Dockerfile
    image: token-service
    container_name: ${TOKEN_HOST}
    ports:
      - '${TOKEN_PORTS}'
  bookmark:
    build:
      context: bookmarks-service
      dockerfile: ../Dockerfile
    image: bookmark
    container_name: ${BOOKMARK_HOST}
    depends_on:
      - bookmark-db
      - token
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${BOOKMARK_DB}:5432/bookmarks
      - SPRING_DATASOURCE_USERNAME=bmks
      - SPRING_DATASOURCE_PASSWORD=skram
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - TOKEN_HOST=${TOKEN_HOST}
    ports:
      - '${BOOKMARK_PORTS}'
    volumes:
      - bookmark_db:/var/lib/postgresql/data
  event:
    build:
      context: event-service
      dockerfile: ../Dockerfile
    image: event-service
    container_name: ${EVENT_HOST}
    depends_on:
      - ${EVENT_DB}
    environment:
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=event
      - SPRING_DATA_MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@${EVENT_DB}:27017/?retryWrites=true&w=majority
      - SPRING_DATA_MONGODB_DATABASE=event
    ports:
      - '${EVENT_PORTS}'
    volumes:
      - event_db:/data/db
  session-service:
    build: .
    links:
      - redis
    ports:
      - "8085:8085"
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - TOKEN_HOST=${TOKEN_HOST}
      - TOKEN_PORT=${TOKEN_PORT}
  bookmark-db:
    image: 'postgres:15-alpine'
    container_name: ${BOOKMARK_DB}
    environment:
      - POSTGRES_DB=bookmarks
      - POSTGRES_USER=bmks
      - POSTGRES_PASSWORD=skram
  redis:
    container_name: redis
    image: "redis"
    ports:
      - "6379:6379"
    volumes:
      - redis_db:/data
  mongo:
    image: mongo
    container_name: ${EVENT_DB}
    environment:
      - MONGO_INITDB_ROOT_DB=event
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    ports:
      - '27017:27017'
volumes:
  bookmark_db:
  redis_db:
  event_db:
